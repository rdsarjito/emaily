{"version":3,"sources":["reducers/barangReducer.js","reducers/index.js","reducers/authReducer.js","actions/types.js","reducers/incrementReducer.js","actions/index.js","components/Payments.js","components/Header.js","components/App.js","index.js"],"names":["initialState","listBarang","combineReducers","auth","state","action","type","payload","barang","listBaru","push","increment","actions","fetchUser","dispatch","a","axios","get","res","data","handleToken","token","post","tambahDataBarang","addIncrement","Payments","console","log","process","name","description","amount","props","stripeKey","className","Component","connect","Header","this","href","key","style","margin","credits","to","_renderContent","Dashboard","SurveyNew","Landing","App","onClick","counter","exact","path","component","mapDispatchToProps","listDataBarang","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.aef2e69e.chunk.js","sourcesContent":["import { TAMBAH_DATA_BARANG } from '../actions/types';\n\nconst initialState = {\n    listBarang: []\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case TAMBAH_DATA_BARANG:\n            const listBaru = state.listBarang;\n            listBaru.push(action.barang);\n            return { listBarang: listBaru }\n    \n        default:\n            return state;\n    }\n};","import { combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport barangReducer from './barangReducer';\nimport incrementReducer from './incrementReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  barang: barangReducer ,\n  increment: incrementReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  };\n};","export const FETCH_USER = 'fetch_user';\nexport const TAMBAH_DATA_BARANG = 'tambah_data_barang';","export default (state = 0, actions) => {\n    switch (actions.type) {\n        case 'increment':\n            return state + 1;\n        default:\n            return state;\n    };\n};","import axios from 'axios';\nimport { FETCH_USER, TAMBAH_DATA_BARANG } from './types'\n\nexport const fetchUser = () => async dispatch => {\n    const res = await axios.get('/api/current_user');\n\n    dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const handleToken = (token) => async dispatch => {\n    const res = await axios.post('/api/stripe', token);\n\n    dispatch({ type: FETCH_USER, payload: res.data })\n}\n\nexport const tambahDataBarang = (barang) => {\n    return (dispatch) => {\n        dispatch({\n            type: TAMBAH_DATA_BARANG,\n            barang: barang\n        });\n    }\n};\n\nexport const addIncrement = () => {\n    return (dispatch) => {\n        dispatch({\n            type: 'increment',\n        });\n    }\n};\n","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nclass Payments extends Component {\n  render() {\n    console.log(process.env.REACT_APP_STRIPE_KEY)    \n    return (\n      <StripeCheckout\n        name=\"Emaily\"\n        description=\"$5 for 5 email credits\"\n        amount={500}\n        token={token => this.props.handleToken(token)}\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n        <button className=\"btn\">\n          Add Credits\n        </button>\n      </StripeCheckout>\n    );\n  }\n}\n\nexport default connect(null, actions)(Payments);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Payments from './Payments';\n\nclass Header extends Component {\n  _renderContent() {\n    switch (this.props.auth){\n      case null:\n        return;\n      case false:\n        return (\n          <li>\n            <a href='/auth/google'>Login with Google</a>\n          </li>\n        );\n      default:\n        return [\n            <li key=\"1\"><Payments /></li>,\n            <li key=\"3\" style={{ margin: '0 10px' }}>\n              Credits: {this.props.auth.credits}\n            </li>,\n            <li key=\"2\"><a href='/api/logout'>Logout</a></li>\n        ];\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link \n            to={this.props.auth ? '/surveys' : '/'} \n            className=\"left brand-logo\"> \n            Emaily\n          \n          </Link>\n          <ul className=\"right\">\n            {this._renderContent()}\n          </ul>\n        </div>\n      </nav>\n    );\n  };\n\n};\n\nfunction mapStateToProps({ auth }) {\n  return { auth: auth }\n}\n\nexport default connect(mapStateToProps)(Header);","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'\n\nimport Header from './Header';\nconst Dashboard = () => <h2>Dashboard</h2>\nconst SurveyNew = () => <h2>SurveyNew</h2>\nconst Landing = () => <h2>Landing</h2>\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.fetchUser();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <button onClick={this.props.addIncrement} >increment {this.props.counter}</button>\n          <div>\n            <Header />\n            <Route exact={true} path=\"/\" component={Landing} />\n            <Route exact={true} path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    listDataBarang: state.barang.listBarang,\n    counter: state.increment,\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchUser: actions.fetchUser,\n  addIncrement: actions.addIncrement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './components/App'\n// import Increment from './components/Increment';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\n// function App() {\n//   return (\n//     <>\n//       <p>Test</p>\n//       <Increment />\n//     </>\n//   );\n// };\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider> , \n  document.querySelector('#app')  \n);\n\n\n// console.log('STRIPE KEY IS', process.env.REACT_APP_STRIPE_KEY)\n// console.log('Enviroment is', process.env.NODE_ENV)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// // enum\n// const PILIHAN = {\n//     komputer: 'Komputer',\n//     mobile: 'Mobile',\n// }\n\n// const LIST_TODO_STORAGE = 'list-todo';\n\n\n// const getLocalStorage = () => {\n//     const storage = localStorage.getItem(LIST_TODO_STORAGE);\n//     if (!storage) return [];\n//     return JSON.parse(storage);\n// }\n\n// const saveToLocalStorage = (items) => {\n//     localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: '',\n//             list: getLocalStorage(),\n//         }\n//         this._inputField = this._inputField.bind(this)\n//         this._onSubmit = this._onSubmit.bind(this)\n//         this._handleEnterKey = this._handleEnterKey.bind(this)\n//         this._hapusList = this._hapusList.bind(this)\n//     }\n\n//     /**\n//      * \n//      * @param {event} e \n//      */\n//     _handleEnterKey(e) {\n//         if(e.key.toLowerCase() === 'enter') {\n//             this._onSubmit();\n//         }\n//     }\n\n//     /**\n//      * validasi\n//      * return bool\n//      */\n//     _error() {\n//         return this.state.input === '' || this.state.list.length >= 10;\n//     }\n\n//     /**\n//      * handle input change\n//      * @param {event} e \n//      */\n//     _inputField(e) {\n//         this.setState( {input: e.target.value} );\n//     }\n\n//     _onSubmit() {\n//         if (this._error()) {\n//             return;\n//         }\n//         const newList = this.state.list;\n//         newList.push({id: +new Date(), input: this.state.input});\n\n//         saveToLocalStorage(newList);\n\n//         this.setState({\n//             input: '',\n//             list: newList\n//         });\n//     }\n\n//     /**\n//      * delete item of list and set state to list\n//      * @param {id of list} id \n//      */\n//     _hapusList(id) {\n//         const newList = this.state.list;\n//         const cariIndex = newList.findIndex(e => e.id === id);\n//         if (cariIndex > -1) {\n//             newList.splice(cariIndex, 1);\n\n//             this.setState({\n//                 list: newList\n//             });\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n//                 <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n//                 <ListItems lists={this.state.list} hapusList={this._hapusList} />\n//             </div>\n//         )\n//     }\n// }\n\n// class ListItems extends React.Component {\n//     constructor() {\n//         super()\n//         this._hapusListHandler = this._hapusListHandler.bind(this)\n//     }\n\n//     /**\n//      * delete handler and send to props._hapusListHandler\n//      * @param {id of list from props.list} id \n//      */\n//     _hapusListHandler(id) {\n//         this.props.hapusList(id)\n//     }\n\n//     _renderTitle() {\n//         const lists = this.props.lists;\n//         if (lists.length < 10) {\n//             return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n//         }\n//         return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n//     }\n\n//     render() {\n//         const listItems = this.props.lists.map((list) =>\n//             <li key={list.id} id={list.id}>\n//                 {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n//             </li>\n//         );\n\n//         return (\n//             <div>\n//                 {this._renderTitle()}\n//                 <ul>\n//                     {PILIHAN[this.props.element]}\n//                     {listItems}\n//                 </ul>\n//             </div>            \n//         )\n//     }\n// }\n\n// ReactDOM.render(<App />, document.getElementById('app'))\n\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))"],"sourceRoot":""}