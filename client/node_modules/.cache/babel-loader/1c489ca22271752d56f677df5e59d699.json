{"ast":null,"code":"import'materialize-css/dist/css/materialize.min.css';import React from'react';import ReactDOM,{render}from'react-dom';import{Provider,connect}from'react-redux';import{createStore,applyMiddleware}from'redux';import reduxThunk from'redux-thunk';import reducers from'./reducers';import App from'./components/App';// import Increment from './components/Increment';\nvar store=createStore(reducers,{},applyMiddleware(reduxThunk));// function App() {\n//   return (\n//     <>\n//       <p>Test</p>\n//       <Increment />\n//     </>\n//   );\n// };\nReactDOM.render(/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(App,null)),document.querySelector('#app'));// console.log('STRIPE KEY IS', process.env.REACT_APP_STRIPE_KEY)\n// console.log('Enviroment is', process.env.NODE_ENV)\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// // enum\n// const PILIHAN = {\n//     komputer: 'Komputer',\n//     mobile: 'Mobile',\n// }\n// const LIST_TODO_STORAGE = 'list-todo';\n// const getLocalStorage = () => {\n//     const storage = localStorage.getItem(LIST_TODO_STORAGE);\n//     if (!storage) return [];\n//     return JSON.parse(storage);\n// }\n// const saveToLocalStorage = (items) => {\n//     localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n// }\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: '',\n//             list: getLocalStorage(),\n//         }\n//         this._inputField = this._inputField.bind(this)\n//         this._onSubmit = this._onSubmit.bind(this)\n//         this._handleEnterKey = this._handleEnterKey.bind(this)\n//         this._hapusList = this._hapusList.bind(this)\n//     }\n//     /**\n//      * \n//      * @param {event} e \n//      */\n//     _handleEnterKey(e) {\n//         if(e.key.toLowerCase() === 'enter') {\n//             this._onSubmit();\n//         }\n//     }\n//     /**\n//      * validasi\n//      * return bool\n//      */\n//     _error() {\n//         return this.state.input === '' || this.state.list.length >= 10;\n//     }\n//     /**\n//      * handle input change\n//      * @param {event} e \n//      */\n//     _inputField(e) {\n//         this.setState( {input: e.target.value} );\n//     }\n//     _onSubmit() {\n//         if (this._error()) {\n//             return;\n//         }\n//         const newList = this.state.list;\n//         newList.push({id: +new Date(), input: this.state.input});\n//         saveToLocalStorage(newList);\n//         this.setState({\n//             input: '',\n//             list: newList\n//         });\n//     }\n//     /**\n//      * delete item of list and set state to list\n//      * @param {id of list} id \n//      */\n//     _hapusList(id) {\n//         const newList = this.state.list;\n//         const cariIndex = newList.findIndex(e => e.id === id);\n//         if (cariIndex > -1) {\n//             newList.splice(cariIndex, 1);\n//             this.setState({\n//                 list: newList\n//             });\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n//                 <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n//                 <ListItems lists={this.state.list} hapusList={this._hapusList} />\n//             </div>\n//         )\n//     }\n// }\n// class ListItems extends React.Component {\n//     constructor() {\n//         super()\n//         this._hapusListHandler = this._hapusListHandler.bind(this)\n//     }\n//     /**\n//      * delete handler and send to props._hapusListHandler\n//      * @param {id of list from props.list} id \n//      */\n//     _hapusListHandler(id) {\n//         this.props.hapusList(id)\n//     }\n//     _renderTitle() {\n//         const lists = this.props.lists;\n//         if (lists.length < 10) {\n//             return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n//         }\n//         return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n//     }\n//     render() {\n//         const listItems = this.props.lists.map((list) =>\n//             <li key={list.id} id={list.id}>\n//                 {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n//             </li>\n//         );\n//         return (\n//             <div>\n//                 {this._renderTitle()}\n//                 <ul>\n//                     {PILIHAN[this.props.element]}\n//                     {listItems}\n//                 </ul>\n//             </div>            \n//         )\n//     }\n// }\n// ReactDOM.render(<App />, document.getElementById('app'))\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))","map":{"version":3,"sources":["/home/ramadhani/study/server/client/src/index.js"],"names":["React","ReactDOM","render","Provider","connect","createStore","applyMiddleware","reduxThunk","reducers","App","store","document","querySelector"],"mappings":"AAAA,MAAO,8CAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,EAAmBC,MAAnB,KAAiC,WAAjC,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,aAAlC,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA;AAEA,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAACG,QAAD,CAAW,EAAX,CAAeF,eAAe,CAACC,UAAD,CAA9B,CAAzB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAN,QAAQ,CAACC,MAAT,cACE,oBAAC,QAAD,EAAU,KAAK,CAAEQ,KAAjB,eAAwB,oBAAC,GAAD,MAAxB,CADF,CAEEC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAFF,EAMA;AACA;AAksourcesContent":["import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './components/App'\n// import Increment from './components/Increment';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\n// function App() {\n//   return (\n//     <>\n//       <p>Test</p>\n//       <Increment />\n//     </>\n//   );\n// };\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider> , \n  document.querySelector('#app')  \n);\n\n\n// console.log('STRIPE KEY IS', process.env.REACT_APP_STRIPE_KEY)\n// console.log('Enviroment is', process.env.NODE_ENV)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// // enum\n// const PILIHAN = {\n//     komputer: 'Komputer',\n//     mobile: 'Mobile',\n// }\n\n// const LIST_TODO_STORAGE = 'list-todo';\n\n\n// const getLocalStorage = () => {\n//     const storage = localStorage.getItem(LIST_TODO_STORAGE);\n//     if (!storage) return [];\n//     return JSON.parse(storage);\n// }\n\n// const saveToLocalStorage = (items) => {\n//     localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: '',\n//             list: getLocalStorage(),\n//         }\n//         this._inputField = this._inputField.bind(this)\n//         this._onSubmit = this._onSubmit.bind(this)\n//         this._handleEnterKey = this._handleEnterKey.bind(this)\n//         this._hapusList = this._hapusList.bind(this)\n//     }\n\n//     /**\n//      * \n//      * @param {event} e \n//      */\n//     _handleEnterKey(e) {\n//         if(e.key.toLowerCase() === 'enter') {\n//             this._onSubmit();\n//         }\n//     }\n\n//     /**\n//      * validasi\n//      * return bool\n//      */\n//     _error() {\n//         return this.state.input === '' || this.state.list.length >= 10;\n//     }\n\n//     /**\n//      * handle input change\n//      * @param {event} e \n//      */\n//     _inputField(e) {\n//         this.setState( {input: e.target.value} );\n//     }\n\n//     _onSubmit() {\n//         if (this._error()) {\n//             return;\n//         }\n//         const newList = this.state.list;\n//         newList.push({id: +new Date(), input: this.state.input});\n\n//         saveToLocalStorage(newList);\n\n//         this.setState({\n//             input: '',\n//             list: newList\n//         });\n//     }\n\n//     /**\n//      * delete item of list and set state to list\n//      * @param {id of list} id \n//      */\n//     _hapusList(id) {\n//         const newList = this.state.list;\n//         const cariIndex = newList.findIndex(e => e.id === id);\n//         if (cariIndex > -1) {\n//             newList.splice(cariIndex, 1);\n\n//             this.setState({\n//                 list: newList\n//             });\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n//                 <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n//                 <ListItems lists={this.state.list} hapusList={this._hapusList} />\n//             </div>\n//         )\n//     }\n// }\n\n// class ListItems extends React.Component {\n//     constructor() {\n//         super()\n//         this._hapusListHandler = this._hapusListHandler.bind(this)\n//     }\n\n//     /**\n//      * delete handler and send to props._hapusListHandler\n//      * @param {id of list from props.list} id \n//      */\n//     _hapusListHandler(id) {\n//         this.props.hapusList(id)\n//     }\n\n//     _renderTitle() {\n//         const lists = this.props.lists;\n//         if (lists.length < 10) {\n//             return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n//         }\n//         return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n//     }\n\n//     render() {\n//         const listItems = this.props.lists.map((list) =>\n//             <li key={list.id} id={list.id}>\n//                 {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n//             </li>\n//         );\n\n//         return (\n//             <div>\n//                 {this._renderTitle()}\n//                 <ul>\n//                     {PILIHAN[this.props.element]}\n//                     {listItems}\n//                 </ul>\n//             </div>            \n//         )\n//     }\n// }\n\n// ReactDOM.render(<App />, document.getElementById('app'))\n\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))"]},"metadata":{},"sourceType":"module"}