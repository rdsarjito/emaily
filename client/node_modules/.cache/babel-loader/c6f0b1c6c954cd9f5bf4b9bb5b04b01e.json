{"ast":null,"code":"var _jsxFileName = \"/home/ramadhani/sandbox/server/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass FormBelanja extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        margin: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        width: '10000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"grapefruit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, \"Grapefruit\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, \"Lime\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"coconut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"Coconut\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mango\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Mango\")));\n  }\n\n}\n\n;\nReactDOM.render( /*#__PURE__*/React.createElement(FormBelanja, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }\n}), document.getElementById('app')); // import React from 'react';\n// import ReactDOM from 'react-dom';\n// // enum\n// const PILIHAN = {\n//     komputer: 'Komputer',\n//     mobile: 'Mobile',\n// }\n// const LIST_TODO_STORAGE = 'list-todo';\n// const getLocalStorage = () => {\n//     const storage = localStorage.getItem(LIST_TODO_STORAGE);\n//     if (!storage) return [];\n//     return JSON.parse(storage);\n// }\n// const saveToLocalStorage = (items) => {\n//     localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n// }\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: '',\n//             list: getLocalStorage(),\n//         }\n//         this._inputField = this._inputField.bind(this)\n//         this._onSubmit = this._onSubmit.bind(this)\n//         this._handleEnterKey = this._handleEnterKey.bind(this)\n//         this._hapusList = this._hapusList.bind(this)\n//     }\n//     /**\n//      * \n//      * @param {event} e \n//      */\n//     _handleEnterKey(e) {\n//         if(e.key.toLowerCase() === 'enter') {\n//             this._onSubmit();\n//         }\n//     }\n//     /**\n//      * validasi\n//      * return bool\n//      */\n//     _error() {\n//         return this.state.input === '' || this.state.list.length >= 10;\n//     }\n//     /**\n//      * handle input change\n//      * @param {event} e \n//      */\n//     _inputField(e) {\n//         this.setState( {input: e.target.value} );\n//     }\n//     _onSubmit() {\n//         if (this._error()) {\n//             return;\n//         }\n//         const newList = this.state.list;\n//         newList.push({id: +new Date(), input: this.state.input});\n//         saveToLocalStorage(newList);\n//         this.setState({\n//             input: '',\n//             list: newList\n//         });\n//     }\n//     /**\n//      * delete item of list and set state to list\n//      * @param {id of list} id \n//      */\n//     _hapusList(id) {\n//         const newList = this.state.list;\n//         const cariIndex = newList.findIndex(e => e.id === id);\n//         if (cariIndex > -1) {\n//             newList.splice(cariIndex, 1);\n//             this.setState({\n//                 list: newList\n//             });\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n//                 <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n//                 <ListItems lists={this.state.list} hapusList={this._hapusList} />\n//             </div>\n//         )\n//     }\n// }\n// class ListItems extends React.Component {\n//     constructor() {\n//         super()\n//         this._hapusListHandler = this._hapusListHandler.bind(this)\n//     }\n//     /**\n//      * delete handler and send to props._hapusListHandler\n//      * @param {id of list from props.list} id \n//      */\n//     _hapusListHandler(id) {\n//         this.props.hapusList(id)\n//     }\n//     _renderTitle() {\n//         const lists = this.props.lists;\n//         if (lists.length < 10) {\n//             return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n//         }\n//         return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n//     }\n//     render() {\n//         const listItems = this.props.lists.map((list) =>\n//             <li key={list.id} id={list.id}>\n//                 {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n//             </li>\n//         );\n//         return (\n//             <div>\n//                 {this._renderTitle()}\n//                 <ul>\n//                     {PILIHAN[this.props.element]}\n//                     {listItems}\n//                 </ul>\n//             </div>            \n//         )\n//     }\n// }\n// ReactDOM.render(<App />, document.getElementById('app'))\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))","map":{"version":3,"sources":["/home/ramadhani/sandbox/server/client/src/index.js"],"names":["React","ReactDOM","FormBelanja","Component","render","margin","width","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CALF,CADF;AAeC;;AAjBqC;;AAkBzC;AAEDL,QAAQ,CAACG,MAAT,eAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAiCG,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAjC,E,CAwsourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass FormBelanja extends React.Component {\n  render() {\n    return (\n      <form>\n        <div>\n          <input style={{margin: '0', }}></input>\n        </div>\n        <input></input>\n        <select style={{width: '10000'}}>\n          <option value=\"grapefruit\">Grapefruit</option>\n          <option value=\"lime\">Lime</option>\n          <option value=\"coconut\">Coconut</option>\n          <option value=\"mango\">Mango</option>\n        </select>\n\n      </form>\n        )\n    };\n};\n\nReactDOM.render(<FormBelanja />, document.getElementById('app'));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// // enum\n// const PILIHAN = {\n//     komputer: 'Komputer',\n//     mobile: 'Mobile',\n// }\n\n// const LIST_TODO_STORAGE = 'list-todo';\n\n// const getLocalStorage = () => {\n//     const storage = localStorage.getItem(LIST_TODO_STORAGE);\n//     if (!storage) return [];\n//     return JSON.parse(storage);\n// }\n\n// const saveToLocalStorage = (items) => {\n//     localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n// }\n\n\n// class App extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: '',\n//             list: getLocalStorage(),\n//         }\n//         this._inputField = this._inputField.bind(this)\n//         this._onSubmit = this._onSubmit.bind(this)\n//         this._handleEnterKey = this._handleEnterKey.bind(this)\n//         this._hapusList = this._hapusList.bind(this)\n//     }\n\n//     /**\n//      * \n//      * @param {event} e \n//      */\n//     _handleEnterKey(e) {\n//         if(e.key.toLowerCase() === 'enter') {\n//             this._onSubmit();\n//         }\n//     }\n\n//     /**\n//      * validasi\n//      * return bool\n//      */\n//     _error() {\n//         return this.state.input === '' || this.state.list.length >= 10;\n//     }\n\n//     /**\n//      * handle input change\n//      * @param {event} e \n//      */\n//     _inputField(e) {\n//         this.setState( {input: e.target.value} );\n//     }\n\n//     _onSubmit() {\n//         if (this._error()) {\n//             return;\n//         }\n//         const newList = this.state.list;\n//         newList.push({id: +new Date(), input: this.state.input});\n\n//         saveToLocalStorage(newList);\n\n//         this.setState({\n//             input: '',\n//             list: newList\n//         });\n//     }\n\n//     /**\n//      * delete item of list and set state to list\n//      * @param {id of list} id \n//      */\n//     _hapusList(id) {\n//         const newList = this.state.list;\n//         const cariIndex = newList.findIndex(e => e.id === id);\n//         if (cariIndex > -1) {\n//             newList.splice(cariIndex, 1);\n\n//             this.setState({\n//                 list: newList\n//             });\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n//                 <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n//                 <ListItems lists={this.state.list} hapusList={this._hapusList} />\n//             </div>\n//         )\n//     }\n// }\n\n// class ListItems extends React.Component {\n//     constructor() {\n//         super()\n//         this._hapusListHandler = this._hapusListHandler.bind(this)\n//     }\n\n//     /**\n//      * delete handler and send to props._hapusListHandler\n//      * @param {id of list from props.list} id \n//      */\n//     _hapusListHandler(id) {\n//         this.props.hapusList(id)\n//     }\n\n//     _renderTitle() {\n//         const lists = this.props.lists;\n//         if (lists.length < 10) {\n//             return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n//         }\n//         return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n//     }\n\n//     render() {\n//         const listItems = this.props.lists.map((list) =>\n//             <li key={list.id} id={list.id}>\n//                 {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n//             </li>\n//         );\n\n//         return (\n//             <div>\n//                 {this._renderTitle()}\n//                 <ul>\n//                     {PILIHAN[this.props.element]}\n//                     {listItems}\n//                 </ul>\n//             </div>            \n//         )\n//     }\n// }\n\n// ReactDOM.render(<App />, document.getElementById('app'))\n\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))"]},"metadata":{},"sourceType":"module"}