{"ast":null,"code":"var _jsxFileName = \"/home/ramadhani/sandbox/server/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // enum\n\nconst PILIHAN = {\n  komputer: 'Komputer',\n  mobile: 'Mobile'\n};\nconst LIST_TODO_STORAGE = 'list-todo';\n\nconst getLocalStorage = () => {\n  const storage = localStorage.getItem(LIST_TODO_STORAGE);\n  if (!storage) return [];\n  return JSON.parse(storage);\n};\n\nconst saveToLocalStorage = items => {\n  localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      list: getLocalStorage()\n    };\n    this._inputField = this._inputField.bind(this);\n    this._onSubmit = this._onSubmit.bind(this);\n    this._handleEnterKey = this._handleEnterKey.bind(this);\n    this._hapusList = this._hapusList.bind(this);\n  }\n  /**\n   * \n   * @param {event} e \n   */\n\n\n  _handleEnterKey(e) {\n    if (e.key.toLowerCase() === 'enter') {\n      this._onSubmit();\n    }\n  }\n  /**\n   * validasi\n   * return bool\n   */\n\n\n  _error() {\n    return this.state.input === '' || this.state.list.length >= 10;\n  }\n  /**\n   * handle input change\n   * @param {event} e \n   */\n\n\n  _inputField(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  _onSubmit() {\n    if (this._error()) {\n      return;\n    }\n\n    const newList = this.state.list;\n    newList.push({\n      id: +new Date(),\n      input: this.state.input\n    });\n    saveToLocalStorage(newList);\n    this.setState({\n      input: '',\n      list: newList\n    });\n  }\n  /**\n   * delete item of list and set state to list\n   * @param {id of list} id \n   */\n\n\n  _hapusList(id) {\n    const newList = this.state.list;\n    const cariIndex = newList.findIndex(e => e.id === id);\n\n    if (cariIndex > -1) {\n      newList.splice(cariIndex, 1);\n      this.setState({\n        list: newList\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this._inputField,\n      onKeyPress: this._handleEnterKey,\n      value: this.state.input,\n      style: {\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 135\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._onSubmit,\n      disabled: this._error(),\n      style: {\n        marginLeft: 264\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ListItems, {\n      lists: this.state.list,\n      hapusList: this._hapusList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nclass ListItems extends React.Component {\n  constructor() {\n    super();\n    this._hapusListHandler = this._hapusListHandler.bind(this);\n  }\n  /**\n   * delete handler and send to props._hapusListHandler\n   * @param {id of list from props.list} id \n   */\n\n\n  _hapusListHandler(id) {\n    this.props.hapusList(id);\n  }\n\n  _renderTitle() {\n    const lists = this.props.lists;\n\n    if (lists.length < 10) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }\n      }, lists.length);\n    }\n\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    }, lists.length, \" Sudah terlalu banyak yang harus dikerjakan\");\n  }\n\n  render() {\n    const listItems = this.props.lists.map(list => /*#__PURE__*/React.createElement(\"li\", {\n      key: list.id,\n      id: list.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, list.input, \" = \", list.id, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      key: list.id,\n      onClick: () => this._hapusListHandler(list.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 42\n      }\n    }, \"x\")));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, this._renderTitle(), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, PILIHAN[this.props.element], listItems));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 17\n  }\n}), document.getElementById('app')); // class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))","map":{"version":3,"sources":["/home/ramadhani/sandbox/server/client/src/index.js"],"names":["React","ReactDOM","PILIHAN","komputer","mobile","LIST_TODO_STORAGE","getLocalStorage","storage","localStorage","getItem","JSON","parse","saveToLocalStorage","items","setItem","stringify","App","Component","constructor","state","input","list","_inputField","bind","_onSubmit","_handleEnterKey","_hapusList","e","key","toLowerCase","_error","length","setState","target","value","newList","push","id","Date","cariIndex","findIndex","splice","render","width","marginLeft","ListItems","_hapusListHandler","props","hapusList","_renderTitle","lists","color","listItems","map","element","document","getElementById"],"mappings":"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BAAL,CAAuBzB,IAAI,CAACgB,EAA5B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD7B,CADc,CAAlB;AAMA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKY,YAAL,EADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK/C,OAAO,CAAC,KAAK6C,KAAL,CAAWO,OAAZ,CADZ,EAEKF,SAFL,CAFJ,CADJ;AASH;;AAtCmC;;AAyCxCnD,QAAQ,CAACyC,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBa,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB,E,CAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// enum\nconst PILIHAN = {\n    komputer: 'Komputer',\n    mobile: 'Mobile',\n}\n\nconst LIST_TODO_STORAGE = 'list-todo';\n\nconst getLocalStorage = () => {\n    const storage = localStorage.getItem(LIST_TODO_STORAGE);\n    if (!storage) return [];\n    return JSON.parse(storage);\n}\n\nconst saveToLocalStorage = (items) => {\n    localStorage.setItem(LIST_TODO_STORAGE, JSON.stringify(items));\n}\n\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            input: '',\n            list: getLocalStorage(),\n        }\n        this._inputField = this._inputField.bind(this)\n        this._onSubmit = this._onSubmit.bind(this)\n        this._handleEnterKey = this._handleEnterKey.bind(this)\n        this._hapusList = this._hapusList.bind(this)\n    }\n\n    /**\n     * \n     * @param {event} e \n     */\n    _handleEnterKey(e) {\n        if(e.key.toLowerCase() === 'enter') {\n            this._onSubmit();\n        }\n    }\n\n    /**\n     * validasi\n     * return bool\n     */\n    _error() {\n        return this.state.input === '' || this.state.list.length >= 10;\n    }\n\n    /**\n     * handle input change\n     * @param {event} e \n     */\n    _inputField(e) {\n        this.setState( {input: e.target.value} );\n    }\n\n    _onSubmit() {\n        if (this._error()) {\n            return;\n        }\n        const newList = this.state.list;\n        newList.push({id: +new Date(), input: this.state.input});\n\n        saveToLocalStorage(newList);\n\n        this.setState({\n            input: '',\n            list: newList\n        });\n    }\n\n    /**\n     * delete item of list and set state to list\n     * @param {id of list} id \n     */\n    _hapusList(id) {\n        const newList = this.state.list;\n        const cariIndex = newList.findIndex(e => e.id === id);\n        if (cariIndex > -1) {\n            newList.splice(cariIndex, 1);\n\n            this.setState({\n                list: newList\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <input onChange={this._inputField} onKeyPress={this._handleEnterKey} value={this.state.input} style={{ width: 300 }}/><br />\n                <button onClick={this._onSubmit} disabled={this._error()} style={{ marginLeft: 264 }}>Add</button>\n                <ListItems lists={this.state.list} hapusList={this._hapusList} />\n            </div>\n        )\n    }\n}\n\nclass ListItems extends React.Component {\n    constructor() {\n        super()\n        this._hapusListHandler = this._hapusListHandler.bind(this)\n    }\n\n    /**\n     * delete handler and send to props._hapusListHandler\n     * @param {id of list from props.list} id \n     */\n    _hapusListHandler(id) {\n        this.props.hapusList(id)\n    }\n\n    _renderTitle() {\n        const lists = this.props.lists;\n        if (lists.length < 10) {\n            return <h1 style={{color: 'green'}}>{lists.length}</h1>;\n        }\n        return <h1 style={{color: 'red'}}>{lists.length} Sudah terlalu banyak yang harus dikerjakan</h1>\n    }\n\n    render() {\n        const listItems = this.props.lists.map((list) =>\n            <li key={list.id} id={list.id}>\n                {list.input} = {list.id} <button key={list.id} onClick={() => this._hapusListHandler(list.id)}>x</button>\n            </li>\n        );\n\n        return (\n            <div>\n                {this._renderTitle()}\n                <ul>\n                    {PILIHAN[this.props.element]}\n                    {listItems}\n                </ul>\n            </div>            \n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('app'))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class Compiler extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             nama: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.passClick = this.passClick.bind(this)\n//     }\n\n//     gantiNama(inputNama) {\n//         this.setState({ nama: inputNama })\n//     }\n\n//     passClick(angka) {\n//         this.gantiNama(angka)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.gantiNama(e.target.value)\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <NumberList numbers={this.props.numbers} />\n//                 <GreetingUser input={this.state.nama} />\n//                 <h1>{this.state.nama}</h1>\n//                 <input onChange={this.ketikaBerubah} />\n//                 <GantiH1 passClick={this.passClick} ketikaBerubah={this.ketikaBerubah} />\n//             </div>\n//         )\n//     }\n// }\n\n// function GreetingUser(props) {\n//     const input = props.input;\n//     console.log(input)\n\n//     return(\n//         <div>\n//             {input.length > 3 && \n//                 <h1>\n//                     Hello {input}\n//                 </h1>\n//             }\n//         </div>\n//     )\n// }\n\n// function NumberList(props) {\n//     const numbers = props.numbers;\n//     const listItems = numbers.map((number) => {\n//         return (\n//             <li key={number.toString()}>\n//                 {number}\n//             </li>\n//         )\n//     })\n\n//     return (\n//         <ul>{listItems}</ul>\n//     )\n// }\n\n// class GantiH1 extends React.Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             input: 'test'\n//         }\n//         this.ketikaBerubah = this.ketikaBerubah.bind(this)\n//         this.ketikaClick = this.ketikaClick.bind(this)\n//     }\n\n//     ketikaClick() {\n//         this.props.passClick(this.state.input)\n//     }\n\n//     ketikaBerubah(e) {\n//         this.setState({ input: e.target.value })\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <input onChange={this.ketikaBerubah} /><br />\n//                 <button onClick={this.ketikaClick}>Berubah</button>\n//             </div>\n//         )\n//     }\n// }\n\n// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]\n// ReactDOM.render(<Compiler numbers={numbers}/>, document.getElementById('app'))"]},"metadata":{},"sourceType":"module"}